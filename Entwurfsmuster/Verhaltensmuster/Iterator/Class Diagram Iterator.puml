' Copyright (c) 2025 Franz Steinkress
' Licensed under the MIT License - see LICENSE for details
@startuml
skinparam nodesep 80
skinparam linetype ortho
skinparam classBackgroundColor #B2C9AB

interface Iterator<T> {
    + {abstract} next(): T
    + {abstract} hasNext() const: bool
}
class ConcreteIterator<T> {
    - aggregate: 
      const ConcreteAggregate<T>&
    - index: size_t
    + ConcreteIterator(aggregate: 
      const ConcreteAggregate<T>&)
    + next(): T
    + hasNext() const: bool
}
interface Aggregate<T> {
    + {abstract} createIterator() const: std::unique_ptr<Iterator<T>>
    + {abstract} addItem(item: const T&): void
}
class ConcreteAggregate<T> {
    - items: std::vector<T>
    + createIterator() const: std::unique_ptr<Iterator<T>>
    + addItem(item: const T&): void
}
class Client {
    + main(): int
}

Iterator <|.. ConcreteIterator
Aggregate <|.. ConcreteAggregate
ConcreteAggregate .right.> ConcreteIterator
ConcreteAggregate <-- ConcreteIterator
Client ..> Aggregate
Client ..> Iterator
@enduml

' Copyright (c) 2025 Franz Steinkress
' Licensed under the MIT License - see LICENSE for details
@startuml
skinparam linetype ortho
skinparam classBackgroundColor #F2CC8F

interface Component {
    + {abstract} operation() const: void
}
class ConcreteComponent {
    + operation() const: void
}
abstract class Decorator {
    - component: std::shared_ptr<Component>
    + Decorator(comp: std::shared_ptr<Component>)
    + {abstract} operation() const: void
}
class ConcreteDecoratorA {
    + ConcreteDecoratorA(comp: 
      std::shared_ptr<Component>)
    + additionalBehaviorA() const: void
    + operation() const: void
}
class ConcreteDecoratorB {
    + ConcreteDecoratorB(comp: 
      std::shared_ptr<Component>)
    + additionalBehaviorB() const: void
    + operation() const: void
}
entity Client {
    + main(): int
}

Component <|.. ConcreteComponent
Component <|.. Decorator
Decorator <|-- ConcreteDecoratorA
Decorator <|-- ConcreteDecoratorB
Decorator o--> Component
Client ..> Component
@enduml

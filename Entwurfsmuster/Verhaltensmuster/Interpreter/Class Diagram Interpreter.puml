' Copyright (c) 2025 Franz Steinkress
' Licensed under the MIT License - see LICENSE for details
@startuml
skinparam linetype ortho
skinparam classBackgroundColor #B2C9AB

class Context {
    - variables: std::unordered_map<std::string, int>
    + setVariable(name: std::string, value: int): void
    + getVariable(name: std::string) const: int
}
interface AbstractExpression {
    + {abstract} interpret(context: 
      const Context&) const: int
}
class TerminalExpression {
    - name: std::string
    + TerminalExpression(name: std::string)
    + interpret(context: 
      const Context&) const: int
}
class NonterminalExpression {
    - expressions: std::vector<std::shared_ptr<AbstractExpression>>
    + NonterminalExpression(exprs: 
      std::initializer_list<std::shared_ptr<AbstractExpression>>)
    + addExpression(expr: 
      std::shared_ptr<AbstractExpression> ): void
    + interpret(context: 
      const Context&) const: int
}
class Client {
    + main(): void
}

AbstractExpression <|.. TerminalExpression
AbstractExpression <|.. NonterminalExpression
NonterminalExpression o--> "0..*  " AbstractExpression
Context .[hidden]down.> AbstractExpression
Client .[hidden]down.> TerminalExpression
Client .right.> Context
Client .right.> AbstractExpression
@enduml
